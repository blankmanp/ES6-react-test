'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _header = require('./header');

var _header2 = _interopRequireDefault(_header);

var _footer = require('./footer');

var _footer2 = _interopRequireDefault(_footer);

var _catUtil = require('cat-util');

var Dialog = (function (_Component) {
    _inherits(Dialog, _Component);

    _createClass(Dialog, null, [{
        key: 'propTypes',
        value: {
            show: _react2['default'].PropTypes.bool,
            toBody: _react2['default'].PropTypes.bool,
            mySize: _react2['default'].PropTypes.string,
            title: _react2['default'].PropTypes.string,
            noCloseButton: _react2['default'].PropTypes.bool,
            buttons: _react2['default'].PropTypes.array,
            noButtons: _react2['default'].PropTypes.bool,
            autoClose: _react2['default'].PropTypes.bool
        },
        enumerable: true
    }, {
        key: 'defaultProps',
        value: {
            show: false,
            toBody: true,
            mySize: 'medium',
            title: '标题',
            noCloseButton: false,
            buttons: [{
                name: '关闭'
            }],
            noButtons: false,
            autoClose: true
        },
        enumerable: true
    }]);

    function Dialog(props) {
        _classCallCheck(this, Dialog);

        _get(Object.getPrototypeOf(Dialog.prototype), 'constructor', this).call(this, props);
        this.state = {
            show: this.props.show
        };
        this.size = {
            'auto': 'auto',
            'large': 'lg',
            'medium': '',
            'small': 'sm'
        };
    }

    _createClass(Dialog, [{
        key: '_handleClose',
        value: function _handleClose(event) {
            if (event.target.className == 'modal fade in' && this.props.autoClose) {
                this.props.onClose();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            if (this.props.show) {
                this.rendered = true;
            }
            return this.props.toBody ? null : this.rendered ? this._renderDialog() : null;
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (this.props.toBody && this.rendered) {
                _reactDom2['default'].render(this._renderDialog(), this._getDialogContainer());
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            if (this.dialogContainer) {
                this._cleanDialogContainer();
            }
        }

        // 生成外部结构
    }, {
        key: '_getDialogContainer',
        value: function _getDialogContainer() {
            if (!this.dialogContainer) {
                this.dialogContainer = document.createElement('div');
                this.dialogContainer.className = 'my-dialog-container';
                document.body.appendChild(this.dialogContainer);
            }
            return this.dialogContainer;
        }

        // 清除节点
    }, {
        key: '_cleanDialogContainer',
        value: function _cleanDialogContainer() {
            _react2['default'].unmountComponentAtNode(this._getDialogContainer());
            document.body.removeChild(this.dialogContainer);
            this.dialogContainer = null;
        }

        // 生成主要内容
    }, {
        key: '_renderDialog',
        value: function _renderDialog() {
            var _props = this.props;
            var mySize = _props.mySize;
            var show = _props.show;
            var title = _props.title;
            var noCloseButton = _props.noCloseButton;
            var onClose = _props.onClose;
            var buttons = _props.buttons;
            var noButtons = _props.noButtons;
            var divStyle = {
                display: show ? 'block' : 'none'
            };
            var className = 'modal-dialog modal-' + this.size[mySize];

            return _react2['default'].createElement(
                'div',
                { className: 'modal-open' },
                _react2['default'].createElement(
                    'div',
                    {
                        className: 'modal fade in',
                        style: divStyle,
                        onClick: this._handleClose.bind(this)
                    },
                    _react2['default'].createElement(
                        'div',
                        { className: className },
                        _react2['default'].createElement(
                            'div',
                            { className: 'modal-content' },
                            _react2['default'].createElement(_header2['default'], {
                                title: title,
                                noCloseButton: noCloseButton,
                                onClose: onClose
                            }),
                            _react2['default'].createElement(
                                'div',
                                { className: 'modal-body' },
                                this.props.children
                            ),
                            _react2['default'].createElement(_footer2['default'], {
                                buttons: buttons,
                                onClose: onClose,
                                noButtons: noButtons
                            })
                        )
                    )
                ),
                this._renderBackdrop()
            );
        }

        // 生成背景
    }, {
        key: '_renderBackdrop',
        value: function _renderBackdrop() {
            var _props2 = this.props;
            var show = _props2.show;
            var onClose = _props2.onClose;
            var divStyle = {
                display: show ? 'block' : 'none'
            };
            return _react2['default'].createElement('div', { className: 'modal-backdrop fade in', style: divStyle });
        }
    }]);

    return Dialog;
})(_react.Component);

exports['default'] = Dialog;
module.exports = exports['default'];