'use strict';

Object.defineProperty(exports, '__esModule', {
	value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Notice = (function (_Component) {
	_inherits(Notice, _Component);

	_createClass(Notice, null, [{
		key: 'propTypes',
		value: {
			duration: _react2['default'].PropTypes.number,
			content: _react2['default'].PropTypes.string,
			preFixName: _react2['default'].PropTypes.string
		},
		enumerable: true
	}, {
		key: 'defaultProps',
		value: {
			duration: 5,
			content: 'This is a notice',
			preFixName: 'cat'
		},
		enumerable: true
	}]);

	function Notice(props) {
		_classCallCheck(this, Notice);

		_get(Object.getPrototypeOf(Notice.prototype), 'constructor', this).call(this, props);
	}

	_createClass(Notice, [{
		key: 'close',
		value: function close() {
			this.props.onClose();
		}
	}, {
		key: 'clearTimer',
		value: function clearTimer() {
			if (this.timer) {
				clearTimeout(this.timer);
				this.timer = null;
			}
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this = this;

			var duration = this.props.duration;

			if (duration !== 0) {
				this.timer = setTimeout(function () {
					_this.close();
				}, duration * 1000);
			}
		}
	}, {
		key: 'shouldComponentUpdate',
		value: function shouldComponentUpdate(nextProps) {
			return false;
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this.clearTimer();
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props;
			var type = _props.type;
			var preFixName = _props.preFixName;
			// TODO: 更新相关的less文件，使用有前缀的类名, 去除没有逻辑的style
			var cls = preFixName + '-alert ' + preFixName + '-alert-' + type;

			return _react2['default'].createElement(
				'div',
				{ className: cls },
				this.props.children,
				_react2['default'].createElement(
					'i',
					{ className: 'close', onClick: this.close.bind(this) },
					'×'
				)
			);
		}
	}]);

	return Notice;
})(_react.Component);

exports['default'] = Notice;
module.exports = exports['default'];