'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var Filter = (function (_Component) {
    _inherits(Filter, _Component);

    _createClass(Filter, null, [{
        key: 'propTypes',
        value: {
            prefixName: _react2['default'].PropTypes.string,
            filterName: _react2['default'].PropTypes.object,
            columns: _react2['default'].PropTypes.array
        },
        enumerable: true
    }, {
        key: 'defaultProps',
        value: {
            prefixName: 'cat',
            filterName: {
                name: '',
                value: ''
            },
            columns: []
        },
        enumerable: true
    }]);

    function Filter(props) {
        var _this = this;

        _classCallCheck(this, Filter);

        _get(Object.getPrototypeOf(Filter.prototype), 'constructor', this).call(this, props);
        this.state = {
            open: false
        };

        this._handleFilterChange = function (event) {
            _this.props.updateFilter(event.target.value, 'value');
        };

        this._handleFilterClick = function () {
            _this.setState({
                open: !_this.state.open
            });
        };

        this._handleFilterChoose = function (event) {
            event.preventDefault();
            _this.props.updateFilter(event.target.name, 'name');
            _this._handleFilterClick();
        };
    }

    _createClass(Filter, [{
        key: 'render',
        value: function render() {
            var _props = this.props;
            var prefixName = _props.prefixName;
            var filterName = _props.filterName;
            var columns = _props.columns;
            var open = this.state.open;
            var self = this;
            var dropdownClass = open ? 'dropdown open' : 'dropdown';

            var index = _lodash2['default'].findIndex(columns, 'name', filterName.name),
                dropButtonLabel = index < 0 ? '全部' : columns[index].label;

            return _react2['default'].createElement(
                'div',
                { className: prefixName + '-table-headernote pull-left' },
                _react2['default'].createElement('input', {
                    type: 'text',
                    className: 'form-control',
                    placeholder: '筛选',
                    value: filterName.value,
                    onChange: self._handleFilterChange
                }),
                _react2['default'].createElement(
                    'div',
                    { className: dropdownClass },
                    _react2['default'].createElement(
                        'button',
                        { className: 'btn btn-default dropdown-toggle', type: 'button', onClick: self._handleFilterClick },
                        dropButtonLabel,
                        _react2['default'].createElement('span', { className: 'caret' })
                    ),
                    _react2['default'].createElement(
                        'ul',
                        { className: 'dropdown-menu' },
                        _react2['default'].createElement(
                            'li',
                            { className: filterName.name === '' ? 'active' : '' },
                            _react2['default'].createElement(
                                'a',
                                {
                                    href: '#',
                                    name: '',
                                    onClick: this._handleFilterChoose
                                },
                                '全部'
                            )
                        ),
                        _react2['default'].createElement('li', { role: 'separator', className: 'divider' }),
                        _lodash2['default'].map(columns, function (item) {
                            if (item.name) {
                                return _react2['default'].createElement(
                                    'li',
                                    {
                                        key: item.name,
                                        className: filterName.name === item.name ? 'active' : ''
                                    },
                                    _react2['default'].createElement(
                                        'a',
                                        {
                                            href: '#',
                                            name: item.name,
                                            onClick: self._handleFilterChoose
                                        },
                                        item.label
                                    )
                                );
                            }
                        })
                    )
                )
            );
        }
    }]);

    return Filter;
})(_react.Component);

exports['default'] = Filter;
module.exports = exports['default'];