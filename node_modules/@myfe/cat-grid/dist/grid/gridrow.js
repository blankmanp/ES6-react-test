'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _gridtdJs = require('./gridtd.js');

var _gridtdJs2 = _interopRequireDefault(_gridtdJs);

var GridRow = (function (_Component) {
    _inherits(GridRow, _Component);

    _createClass(GridRow, null, [{
        key: 'propTypes',
        value: {
            row: _react2['default'].PropTypes.object,
            columns: _react2['default'].PropTypes.array,
            info: _react2['default'].PropTypes.object,
            enableSelection: _react2['default'].PropTypes.bool,
            ifSelected: _react2['default'].PropTypes.bool
        },
        enumerable: true
    }, {
        key: 'defaultProps',
        value: {
            row: {},
            columns: [],
            info: {},
            enableSelection: false,
            isSelected: false
        },
        enumerable: true
    }]);

    function GridRow(props) {
        var _this = this;

        _classCallCheck(this, GridRow);

        _get(Object.getPrototypeOf(GridRow.prototype), 'constructor', this).call(this, props);

        this._handleClick = function (event) {
            _this.props.onSelect(_this.props.info.keyValue);
        };
    }

    _createClass(GridRow, [{
        key: 'renderSelection',

        // 生成选择框
        value: function renderSelection() {
            var _props = this.props;
            var enableSelection = _props.enableSelection;
            var ifSelected = _props.ifSelected;
            var iconClass = ifSelected ? 'glyphicon glyphicon-check' : 'glyphicon glyphicon-unchecked';
            if (!enableSelection) {
                return null;
            } else {
                return _react2['default'].createElement(
                    'td',
                    { onClick: this._handleClick, className: 'table-td-hover' },
                    _react2['default'].createElement('i', { className: iconClass })
                );
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _props2 = this.props;
            var row = _props2.row;
            var columns = _props2.columns;
            var info = _props2.info;
            var ifSelected = _props2.ifSelected;

            return _react2['default'].createElement(
                'tr',
                null,
                this.renderSelection(),
                columns.map(function (column, index) {
                    return _react2['default'].createElement(_gridtdJs2['default'], {
                        key: 'grid-td-' + index,
                        row: row,
                        column: column,
                        info: info,
                        index: index
                    });
                })
            );
        }
    }]);

    return GridRow;
})(_react.Component);

exports['default'] = GridRow;
module.exports = exports['default'];