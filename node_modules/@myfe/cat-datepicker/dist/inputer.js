'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Inputer = (function (_Component) {
    _inherits(Inputer, _Component);

    function Inputer() {
        _classCallCheck(this, Inputer);

        _get(Object.getPrototypeOf(Inputer.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Inputer, [{
        key: 'handleClick',
        value: function handleClick() {
            var _props = this.props;
            var disabled = _props.disabled;
            var readOnly = _props.readOnly;

            !disabled && !readOnly && this.props.onSelect();
        }
    }, {
        key: 'render',
        value: function render() {
            var _props2 = this.props;
            var value = _props2.value;
            var onSelect = _props2.onSelect;
            var disabled = _props2.disabled;
            var readOnly = _props2.readOnly;

            return _react2['default'].createElement(
                'div',
                { className: 'input-group' },
                _react2['default'].createElement('input', {
                    type: 'text',
                    className: 'cat-form-control',
                    onClick: this.handleClick.bind(this),
                    value: value,
                    onChange: function () {},
                    disabled: disabled
                }),
                _react2['default'].createElement(
                    'div',
                    { className: 'input-group-addon', style: { borderRadius: 0 } },
                    _react2['default'].createElement('i', { className: 'glyphicon glyphicon-calendar' })
                )
            );
        }
    }], [{
        key: 'propTypes',
        value: {
            value: _react2['default'].PropTypes.string,
            disabled: _react2['default'].PropTypes.bool,
            readOnly: _react2['default'].PropTypes.bool
        },
        enumerable: true
    }, {
        key: 'defaultProps',
        value: {
            value: '',
            disabled: false,
            readOnly: false
        },
        enumerable: true
    }]);

    return Inputer;
})(_react.Component);

exports['default'] = Inputer;
module.exports = exports['default'];