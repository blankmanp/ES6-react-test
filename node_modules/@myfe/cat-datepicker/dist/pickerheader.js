'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var PickerHeader = (function (_Component) {
    _inherits(PickerHeader, _Component);

    function PickerHeader() {
        _classCallCheck(this, PickerHeader);

        _get(Object.getPrototypeOf(PickerHeader.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(PickerHeader, [{
        key: 'handleClick',
        value: function handleClick(number, type) {
            this.props.dateSwitch(number, type);
        }
    }, {
        key: 'render',
        value: function render() {
            var type = '',
                count = 0,
                prev = '',
                next = '';
            switch (this.props.type) {
                case 'day':
                    type = 'month';
                    count = 1;
                    break;
                case 'month':
                    type = 'year';
                    count = 1;
                    break;
                case 'year':
                    type = 'year';
                    count = 20;
                    break;
            }
            prev = this.props[type] - count;
            next = this.props[type] + count;
            if (this.props.timeOnly) {
                return null;
            } else {
                return _react2['default'].createElement(
                    'div',
                    { className: 'cat-calendar-header clearfix' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'cat-calendar-cell cat-calendar-header-cell-arrow' },
                        _react2['default'].createElement(
                            'button',
                            {
                                className: 'btn btn-default',
                                onClick: this.handleClick.bind(this, prev, type),
                                type: 'button'
                            },
                            _react2['default'].createElement('i', { className: 'glyphicon glyphicon-chevron-left' })
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'cat-calendar-cell cat-calendar-header-cell' },
                        _react2['default'].createElement(
                            'button',
                            {
                                className: 'btn btn-default',
                                onClick: this.handleClick.bind(this, '', 'year'),
                                type: 'button'
                            },
                            this.props.year,
                            '年'
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'cat-calendar-cell cat-calendar-header-cell' },
                        _react2['default'].createElement(
                            'button',
                            {
                                className: 'btn btn-default',
                                onClick: this.handleClick.bind(this, '', 'month'),
                                type: 'button'
                            },
                            this.props.month + 1,
                            '月'
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'cat-calendar-cell cat-calendar-header-cell-arrow' },
                        _react2['default'].createElement(
                            'button',
                            {
                                className: 'btn btn-default',
                                onClick: this.handleClick.bind(this, next, type),
                                type: 'button'
                            },
                            _react2['default'].createElement('i', { className: 'glyphicon glyphicon-chevron-right' })
                        )
                    )
                );
            }
        }
    }]);

    return PickerHeader;
})(_react.Component);

exports['default'] = PickerHeader;
module.exports = exports['default'];