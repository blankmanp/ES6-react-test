'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _catUtil = require('cat-util');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _list = require('./list');

var _list2 = _interopRequireDefault(_list);

var Item = (function (_Component) {
    _inherits(Item, _Component);

    _createClass(Item, null, [{
        key: 'propTypes',
        value: {
            data: _react2['default'].PropTypes.object
        },
        enumerable: true
    }, {
        key: 'defaultProps',
        value: {
            data: {}
        },
        enumerable: true
    }]);

    function Item(props) {
        _classCallCheck(this, Item);

        _get(Object.getPrototypeOf(Item.prototype), 'constructor', this).call(this, props);
        var status = this._isSelected('open', this.props);
        this.state = {
            open: status,
            selected: status
        };
    }

    _createClass(Item, [{
        key: '_isSelected',
        value: function _isSelected(type, props) {
            var active = props.active;
            var selected = props.selected;
            var data = props.data;
            var selectKey = props.selectKey;

            switch (type) {
                case 'open':
                    if (active.length > 0 && _lodash2['default'].last(active)[selectKey] === props.data[selectKey]) {
                        return this.state ? this.state.open && active.length === 1 ? false : true : true;
                    }
                    break;
                case 'selected':
                    if (selected.length > 0 && _lodash2['default'].last(selected)[selectKey] === data[selectKey]) {
                        return true;
                    }
                    break;
            }
            return false;
        }
    }, {
        key: '_handleClick',
        value: function _handleClick(event) {
            this.props.onClick([this.props.data]);
        }
    }, {
        key: '_handleListClick',
        value: function _handleListClick(actives) {
            actives.push(this.props.data);
            this.props.onClick(actives);
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({
                open: this._isSelected('open', nextProps),
                selected: this._isSelected('selected', nextProps)
            });
        }

        // render Icon
    }, {
        key: '_renderIcon',
        value: function _renderIcon() {
            var data = this.props.data;
            var icon = data.icon;
            if (!icon) {
                return null;
            } else {
                if (typeof icon === 'string') {
                    return _react2['default'].createElement('i', { className: icon });
                } else {
                    return icon;
                }
            }
        }
    }, {
        key: '_renderSubIcon',
        value: function _renderSubIcon() {
            var _props = this.props;
            var data = _props.data;
            var opened = _props.opened;
            var open = this.state.open;
            var iStyle = {
                transform: open || opened ? 'rotate(90deg)' : ''
            };

            if (!data.children) {
                return null;
            } else {
                return _react2['default'].createElement('i', { className: 'glyphicon glyphicon-chevron-right has-child-icon', style: iStyle });
            }
        }

        // render 子Ul
    }, {
        key: '_renderSubList',
        value: function _renderSubList() {
            var _props2 = this.props;
            var data = _props2.data;
            var selected = _props2.selected;
            var active = _props2.active;
            var selectKey = _props2.selectKey;
            var opened = _props2.opened;
            var open = this.state.open;

            if (open && active.length > 0) {
                active.pop();
            }

            if (!data.children) {
                return null;
            } else {
                return _react2['default'].createElement(_list2['default'], { data: data.children, open: open, opened: opened, selected: selected, active: active, selectKey: selectKey, onClick: this._handleListClick.bind(this) });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var data = this.props.data;
            var selected = this.state.selected;
            var classNames = (0, _catUtil.setClass)({
                'selected': selected,
                'hidden': data.hidden
            });

            return _react2['default'].createElement(
                'li',
                { className: classNames },
                _react2['default'].createElement(
                    'a',
                    { href: data.href, onClick: this._handleClick.bind(this) },
                    this._renderIcon(),
                    _react2['default'].createElement(
                        'span',
                        null,
                        data.name
                    ),
                    this._renderSubIcon()
                ),
                this._renderSubList()
            );
        }
    }]);

    return Item;
})(_react.Component);

exports['default'] = Item;
module.exports = exports['default'];