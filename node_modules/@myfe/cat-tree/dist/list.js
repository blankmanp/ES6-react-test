'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _item = require('./item');

var _item2 = _interopRequireDefault(_item);

var List = (function (_Component) {
    _inherits(List, _Component);

    function List() {
        _classCallCheck(this, List);

        _get(Object.getPrototypeOf(List.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(List, [{
        key: '_handleClick',

        // Ul Click 仅传递
        value: function _handleClick(actives) {
            this.props.onClick(actives);
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props;
            var data = _props.data;
            var open = _props.open;
            var selected = _props.selected;
            var active = _props.active;
            var selectKey = _props.selectKey;
            var opened = _props.opened;
            var divStyle = {
                display: open || opened ? 'block' : 'none'
            };
            var self = this;

            return _react2['default'].createElement(
                'ul',
                { style: divStyle },
                _lodash2['default'].map(data, function (item) {
                    return _react2['default'].createElement(_item2['default'], {
                        key: item.name,
                        data: item,
                        opened: opened,
                        selected: selected,
                        active: active,
                        selectKey: selectKey,
                        onClick: self._handleClick.bind(self)
                    });
                })
            );
        }
    }], [{
        key: 'propTypes',
        value: {
            data: _react2['default'].PropTypes.array,
            open: _react2['default'].PropTypes.bool,
            selected: _react2['default'].PropTypes.array,
            active: _react2['default'].PropTypes.array
        },
        enumerable: true
    }, {
        key: 'defaultProps',
        value: {
            data: [],
            open: true,
            selected: [],
            active: []
        },
        enumerable: true
    }]);

    return List;
})(_react.Component);

exports['default'] = List;
module.exports = exports['default'];