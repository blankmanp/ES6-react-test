'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _catUtil = require('cat-util');

var _item = require('./item');

var _item2 = _interopRequireDefault(_item);

var _header = require('./header');

var _header2 = _interopRequireDefault(_header);

var _divider = require('./divider');

var _divider2 = _interopRequireDefault(_divider);

var _dropbutton = require('./dropbutton');

var _dropbutton2 = _interopRequireDefault(_dropbutton);

var Dropdown = (function (_Component) {
    _inherits(Dropdown, _Component);

    function Dropdown() {
        _classCallCheck(this, Dropdown);

        _get(Object.getPrototypeOf(Dropdown.prototype), 'constructor', this).apply(this, arguments);

        this.state = {
            visible: false
        };
    }

    _createClass(Dropdown, [{
        key: 'handleSelect',
        value: function handleSelect(key, event) {
            this.props.onSelect && this.props.onSelect(key, event);
        }
    }, {
        key: 'handleClick',
        value: function handleClick() {
            this.setState({
                visible: !this.state.visible
            });
        }
    }, {
        key: 'handleMouseOver',
        value: function handleMouseOver() {
            if (this.props.trigger === 'hover') {
                this.setState({
                    visible: true
                });
            }
        }
    }, {
        key: 'handleMouseLeave',
        value: function handleMouseLeave() {
            if (this.props.trigger === 'hover') {
                this.setState({
                    visible: false
                });
            }
        }
    }, {
        key: '_renderContent',
        value: function _renderContent() {
            var self = this;
            return _react2['default'].Children.map(this.props.children, function (child) {
                return _react2['default'].cloneElement(child, {
                    liveKey: self.props.liveKey,
                    onSelect: self.handleSelect.bind(self)
                });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props;
            var componentClass = _props.componentClass;
            var dropup = _props.dropup;
            var dropright = _props.dropright;
            var visible = this.state.visible;
            var Node = componentClass || 'div';
            var classNames = (0, _catUtil.setClass)('btn-group', {
                'dropup': dropup,
                'open': visible
            });

            return _react2['default'].createElement(
                Node,
                {
                    className: classNames,
                    onMouseOver: this.handleMouseOver.bind(this),
                    onMouseLeave: this.handleMouseLeave.bind(this)
                },
                _react2['default'].createElement(_dropbutton2['default'], _extends({}, this.props, { onClick: this.handleClick.bind(this) })),
                _react2['default'].createElement(
                    'ul',
                    { className: 'dropdown-menu' },
                    this._renderContent()
                )
            );
        }
    }], [{
        key: 'propTypes',
        value: {
            myStyle: _react2['default'].PropTypes.string,
            mySize: _react2['default'].PropTypes.string,
            dropup: _react2['default'].PropTypes.bool,
            noCaret: _react2['default'].PropTypes.bool,
            title: _react2['default'].PropTypes.string,
            trigger: _react2['default'].PropTypes.string,

            componentClass: _react2['default'].PropTypes.string
        },
        enumerable: true
    }, {
        key: 'defaultProps',
        value: {
            myStyle: 'default',
            mySize: 'medium',
            dropup: false,
            noCaret: false,
            title: 'dropdown',
            trigger: 'hover'
        },
        enumerable: true
    }]);

    return Dropdown;
})(_react.Component);

Dropdown.Item = _item2['default'];
Dropdown.Divider = _divider2['default'];
Dropdown.Header = _header2['default'];

exports['default'] = Dropdown;
module.exports = exports['default'];