import React from 'react';
import ReactDOM from 'react-dom';
import _ from 'lodash';

function getStyle(el, props) {
    if (typeof getComputedStyle !== 'undefined')
        return getComputedStyle(el, null).getPropertyValue(props);
    else
        return el.currentStyle[props];
}

let loading = function (el = loading.defaultDom) {
    let dom = el.nodeType ? el :
        ((el = ReactDOM.findDOMNode(el)) && el.nodeType ? el : loading.defaultDom);

    if (!loading.map.has(dom)) {
        let oldPosition = getStyle(dom, 'position'),
            newPosition = oldPosition,
            loadingDom = document.createElement('div');
        if (oldPosition === 'static' && dom !== document.body && dom !== document.documentElement) {
            dom.style.position = newPosition = 'relative';
        }
        loadingDom.className = 'cat-loading';
        loadingDom.innerHTML =
            `<div class="cat-spinner">
            <div class="cat-cube1"></div>
            <div class="cat-cube2"></div></div>`;

        dom.appendChild(loadingDom);
        loading.map.set(dom, {
            oldPosition: oldPosition,
            newPosition: newPosition,
            loadingDom: loadingDom,
            show: true
        });
    } else {
        let v = loading.map.get(dom);
        if (v.show) {
            dom.style.position = v.oldPosition;
            v.loadingDom.style.display = 'none';
            v.show = false;
        } else {
            dom.style.position = v.newPosition;
            v.loadingDom.style.display = 'block';
            v.show = true;
        }
    }
};

loading.map = new WeakMap();

loading.defaultDom = document.body;

loading.setDefault = function (el) {
    if (el.nodeType)
        loading.defaultDom = el;
    else if ((el = ReactDOM.getDOMNode(el)) && el.nodeType)
        loading.defaultDom = el;
    else
        console.warn('loading.setDefault方法的参数为dom对象或者react component对象');
};

loading.superagentLoading = function (el) {
    return function (request) {
        loading(el);
        request._callbacks.end.push(loading.bind(undefined, el));
        return request;
    }
};

export default loading;

